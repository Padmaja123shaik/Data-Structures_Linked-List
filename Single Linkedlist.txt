#include <stdio.h>
#include <stdlib.h>
struct node 
{
    int data;
    struct node *next;
};
struct node *start=NULL;
struct node *create(struct node*);
struct node *display(struct node*);
struct node *add_bgn(struct node*);
struct node *add_end(struct node*);
struct node *add_before(struct node*);
struct node *add_after(struct node*);
struct node *dlt_bgn(struct node*);
struct node *dlt_end(struct node*);


int main()
{
    start=create(start);
    start=display(start);
    
    start=add_bgn(start);
    start=display(start);
    
    start=add_end(start);
    start=display(start);
    
    start=add_before(start);
    start=display(start);
    
    start=add_after(start);
    start=display(start);
    
    start=dlt_bgn(start);
    start=display(start);
    
    start=dlt_end(start);
    start=display(start);
    
    return 0;
}
struct node *create(struct node *start)
{
    struct node *newnode,*ptr;
    int num;
    printf("Enter -1 to end list,or continue:");
    scanf("%d",&num);
    
    while(num!=-1)
    {
        newnode=(struct node*)malloc(sizeof(struct node));
        newnode->data=num;
        
        if(start==NULL)
        {
            newnode->next=NULL;
            start=newnode;
        }
        else
        {
            ptr=start;
            
            while(ptr->next!=NULL)
            {
                ptr=ptr->next;
            }
            
            ptr->next=newnode;
            newnode->next=NULL;
        }
        printf("\nEnter -1 to end list,or continue:");
        scanf("%d",&num);
    }
    return start;
}
struct node *display(struct node *start)
{
    struct node *ptr;
    ptr=start;
    printf("\nNodes in the list:");
    while(ptr->next!=NULL)
    {
        printf("%d ",ptr->data);
        ptr=ptr->next;
    }
    printf("%d ",ptr->data);
    ptr=ptr->next;
    
    return start;
}
struct node *add_bgn(struct node *start)
{
    struct node *newnode,*ptr;
    
    newnode=(struct node*)malloc(sizeof(struct node));
    printf("\nEnter newnode to add before list:");
    scanf("%d",&newnode->data);
    
    ptr=start;
    while(ptr->next!=NULL)
    {
        ptr=ptr->next;
    }
    ptr->next=NULL;
    newnode->next=start;
    start=newnode;
    
    return start;
}
struct node *add_end(struct node *start)
{
    struct node *newnode,*ptr;
     newnode=(struct node*)malloc(sizeof(struct node));
     printf("\nEnter newnode at end of list:");
     scanf("%d",&newnode->data);
     
     ptr=start;
     while(ptr->next!=NULL)
     {
         ptr=ptr->next;
     }
     ptr->next=newnode;
     newnode->next=NULL;
     
     return start;
}
struct node *add_before(struct node *start)
{
    struct node *newnode,*ptr,*prev;
     
     newnode=(struct node*)malloc(sizeof(struct node));
     printf("\nEnter newnode at before node:");
     scanf("%d",&newnode->data);
     
     ptr=start;
     while(ptr->data!=20)
     {
         prev=ptr;
         ptr=ptr->next;
     }
     newnode->next=ptr;
     prev->next=newnode;
     
     return start;
}
struct node *add_after(struct node *start)
{
    
    struct node *newnode,*ptr,*prev;

    newnode=(struct node*)malloc(sizeof(struct node));

    printf("\nEnter newnode at after node:");
    scanf("%d",&newnode->data);

    ptr=start;

    while(ptr->data!=20)
    {
        prev=ptr;
        ptr=ptr->next;
    }
    ptr->next=newnode;
    

    


    return start;
}
struct node *dlt_bgn(struct node *start)
{
    struct node *ptr;
    ptr=start;
    start=start->next;
    
    return start;

}
struct node *dlt_end(struct node *start)
{
    struct node *ptr,*preptr;
    ptr=start;
    preptr=ptr;
    while(ptr->next!=NULL)
    {
        preptr=ptr;
        ptr=ptr->next;
    }
    preptr->next=NULL;
    
    return start;
}


